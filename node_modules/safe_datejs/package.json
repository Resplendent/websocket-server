{
  "name": "safe_datejs",
  "description": "A safe(node.js VM isolated) wrapper around datejs.com library. Safe to be used with mongoose",
  "version": "0.0.1",
  "homepage": "http://www.datejs.com",
  "author": {
    "name": "Firebase.co",
    "email": "npm@firebase.co",
    "url": "http://www.firebase.co"
  },
  "main": "./index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/firebaseco/safe_datejs"
  },
  "bugs": {
    "email": "npm@firebase.co",
    "url": "https://github.com/firebaseco/safe_datejs/issues"
  },
  "keywords": [
    "safe",
    "date.js",
    "datejs",
    "date"
  ],
  "contributors": [
    {
      "name": "Johan Hernandez",
      "email": "johan@firebase.co"
    }
  ],
  "devDependencies": {
    "vows": ">= 0.5.11"
  },
  "engines": {
    "node": ">= 0.4.5"
  },
  "scripts": {
    "test": "make"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/firebaseco/safe_datejs/blob/master/LICENSE"
    }
  ],
  "readme": "# Safe Date.js\n\nAn special wrapper for [the Date.js library](http://www.datejs.com/) that loads the Date.js Date extensions into an special type giving you access to the Date.js magic without screwing `Date` type of the Node.js application. It's safe to be used with type sensitive modules like [Mongoose.js](http://mongoosejs.com/).\n\nSee [the datejs site](http://www.datejs.com/) for more information.\n\n\n## Installation\n\n    npm install safe_datejs\n\n## Usage\n\nUse the function `AsDateJs` to convert your date to Date.js and use `AsRegularDate` when you are finished working with  Date.js. Both functions will return shallow copies.\n\n## Example\n\n    var datejs = require('safe_datejs');\n\n\tvar today = new Date(2011, 11, 12, 0, 0, 0, 0);\n\tvar wrappedToday = today.AsDateJs();\n\tconsole.log('Is today:', wrappedToday.is().today());\n\t\n\tvar tomorrow = wrappedToday.clone().add({days:1});\n\tconsole.log('Wrapped Tomorrow:', tomorrow.toString(), 'is date regular Date: ', (tomorrow instanceof Date));\n\t\n\tvar unwrappedTomorrow = tomorrow.AsRegularDate(); \n\tconsole.log('Unwrapped Tomorrow:', unwrappedTomorrow.toString(), 'is date regular Date: ', (unwrappedTomorrow instanceof Date));\n\n### Result\n\n    Is today: false\n\tWrapped Tomorrow: Tue Dec 13 2011 00:00:00 GMT-0500 (COT) is date regular Date:  false\n\tUnwrapped Tomorrow: Tue Dec 13 2011 00:00:00 GMT-0500 (COT) is date regular Date:  true\n\n## Cloning the Repository\n\n    git clone https://github.com/firebaseco/safe_datejs.git\n\n## Tests\n\n    npm test\n\n## Author\n\n* Johan (author). Email: *johan@firebase.co*\n\n## License\n\nMIT. Check the [the datejs site](http://www.datejs.com/)",
  "readmeFilename": "README.md",
  "_id": "safe_datejs@0.0.1",
  "_from": "safe_datejs@0.0.1"
}
